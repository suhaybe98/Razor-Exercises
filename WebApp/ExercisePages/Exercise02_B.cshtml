@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "Exercise02_B");

    //output variable
    string artistid = "";
    string artistname = "";

    //reteive the passed data value
    //to retreive the passed data use .QueryString["label"]
    //data is returned as a string
    var cid = Request.QueryString["cid"];

    //good practice
    //check that you actually retreived data
    if (string.IsNullOrEmpty(cid))
    {
        Response.Redirect("Exercise02_A.cshtml");
    }

    //this page will access the database when the submit button is pressed
    //the project needs access to 2 more NuGet packages
    //Microsoft.Aspnet.WebPages.Data
    //Microsoft.Aspnet.Webpages.WebData

    //connect to the database
    //use the name attribute off your web connection string

    
}


@section banner {
    <h1>@Page.Title</h1>
}

@if (IsPost)
{
    //obtain my data from the form
    var choice = Request.Form["results"];
    //check for a selection
    if (choice.Equals("0"))
    {
        <p style="color:firebrick">Select a product category to view:</p>
    }
    else
    {
        var prodquery = @"SELECT ArtistId, Name FROM Artists WHERE Name LIKE @0 ORDER BY Name";
        var prodinfo = db.Query(prodquery, choice);
        //      check to see if there are products for category
        if (prodinfo.Count() == 0)
        {
            <p style="color:firebrick">There are no Artists for the selected category.</p>
        }
        else
        {
            //yes products:
            //pass ddl value (CategoryID) to next page
            // to go to another page use Response.Redirect(pagename) (GET method)
            // to pass data along with the page
            // add a ? after the name
            // add for each parameter a coded pair of    label = value
            // separate data pairs with an  &
            // sample syntax    Response.Redirect(page.ext?lbl=value[&lbl=value ...])
            //WARNING: value are passed in plain text on Url
            Response.Redirect("WebGridDisplay.cshtml?cid=" + choice);
        }
    }
}
else
{
    //on page initialization (1st time)
    //testing for an empty collection uses the .Count() method
    //the .Query() command will give you a collection of 0, 1 or more records
    if (catinfo.Count() == 0)
    {
        <p style="color:firebrick">There are no categories on file.</p>
    }
}



<form id="theform" method="post">
    <div class="offset-3">
        <label id="lblArtistList" for="ArtistList">Select artist category to view:</label>
        &nbsp;&nbsp;
        <select id="results" name="results">
            <option value="0">select ....</option>
            @foreach (var item in catinfo)
            {
                //walk through the record collection of Category records
                //for each record in the collection you will create an option line
                //the display text will be the CategoryName
                //the value attribute will use the CategoryID (FKey on Products)
                //reminder of data access on a record
                // a) index   syntax item[index]
                // b) property name  syntax item.PropertyName (column title on the SQL select)
                <option value="@item.ArtistId">@item.Name</option>
            }
        </select>
        &nbsp;&nbsp;
        <button type="submit" id="theButton" name="theButton" value="submit"
                class="btn btn-primary">
            View Artist Albums ...
        </button>
    </div>
</form>