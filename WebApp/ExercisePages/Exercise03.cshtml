@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "Exercise03");

    //consider your need for global variables
    var Title = "";
    
    var ArtistId = "0";
    var ReleaseYear = "";
    var ReleaseLabel = "";
    
    

    var db = Database.Open("CHINOOK");
    var Namequery = "SELECT ArtistId, Name "
            + "FROM Artists "
            + "Order by Name";
    
    var Artistlist = db.Query(Namequery);
    

    //these are validator controls execute on the server side

    Validation.Add("Title",
         Validator.Required("Title name is required"),
          Validator.StringLength(160, 1, "Title name is limited to 160 characters"));

    Validation.Add("ArtistId",
         Validator.Range(1,500, "ArtistId is required"));

    Validation.Add("ReleaseLabel",
 Validator.StringLength(40, 0, "Quantity per unit is limited to 50 characters"));


    Validation.Add("ReleaseYear",
        Validator.Required("ReleaseYear is required."),
        Validator.Range(1950, DateTime.Today.Year, "ReleaseYear must be between 1950 and this year inclusive "));

   
     
    //compare two fields together (ie password)
    //Validation.Add("ConfirmPassword",
    //    Validator.Required("Missing confirm password"),
    //      Validator.StringLength(160, 1, "Confirm password is too long"),
    //      Validator.EqualsTo("Password", "Password not confirmed"));

    //pattern testing (ie PostalCode)
    //Validation.Add("PostalCode",
    //     Validator.Regex(@"^[A-Za-z][0-9][A-Za-z][0-9][A-Za-z][0-9]$",
    //     "Postal Code format invalid (T7T7T7"));
}
@section head{
    @*<link href="~/Content/MyCssCopy.css" rel="stylesheet" />*@
}

@section banner{
    <h1>@Page.Title</h1>
}

@if (IsPost)
{
    Title = Request.Form["Title"];
    
    ArtistId = Request.Form["ArtistList"];
    ReleaseYear = Request.Form["ReleaseYear"];
    ReleaseLabel = Request.Form["ReleaseLabel"];
    
    var thebutton = Request.Form["FormButton"];


    if (thebutton.Equals("Clear")) //pressed the CLEAR button
    {
        Title = "";
       
        ArtistId = "0";
        ReleaseYear = "";
        ReleaseLabel = "";
        

    }
    else //pressed the ADD button
    {
        if (Validation.IsValid())
        {
            try
            {
                var inscommand = "INSERT INTO Albums  "
                    + "(Title, ArtistId, ReleaseYear, "
                    + "ReleaseLabel)"
                    + "VALUES(@0, @1, @2, @3)";
                db.Execute(inscommand, Title,
                   
                    ArtistId.Equals("0") ? null : ArtistId,
                    string.IsNullOrEmpty(ReleaseYear) ? null : ReleaseYear,
                    string.IsNullOrEmpty(ReleaseLabel) ? null : ReleaseLabel);



                <div class="col-12 text-center">
                    <p style="color:green">
                        Product has been ADDED
                    </p>
                </div>
            }
            catch (Exception ex)
            {
                <div class="col-12 text-center">
                    <p style="color:firebrick; font-size:large">
                        Processing error: @ex.Message
                    </p>
                </div>
            }
        }
    }
}
else
{

}
@Html.ValidationSummary()
<form id="theForm" action="" method="post">
    <div class="row row-cols-2">
        <div class="col text-right">
            <label id="lblTitle" for="Title">Title</label>
        </div>
        <div class="col text-left">
            <input type="text" name="Title" value="@Title" />
        </div><br />
        <div class="col text-right">
            <label id="lblArtistList" for="ArtistList">Artist</label>
        </div>
        <div class="col text-left">
            <select name="ArtistList">
                <option value="0">select...</option>
                @foreach (var acollectionrow in Artistlist)
                {
                    if (acollectionrow.Name.ToString() == ArtistId)
                    {
                        <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                    }
                    else
                    {
                        <option value="@acollectionrow[0]">@acollectionrow[1]</option>
                    }
                }
            </select>
        </div><br />
        
        <div class="col text-right">
            <label id="lblReleaseYeart" for="ReleaseYear">Year</label>
        </div>
        <div class="col text-left">
            <input type="text" name="ReleaseYear" value="@ReleaseYear" />
        </div><br />
        <div class="col text-right">
            <label id="lblReleaseLabel" for="ReleaseLabel">Label</label>
        </div>
        <div class="col text-left">
            <input type="text" name="ReleaseLabel" value="@ReleaseLabel"  />
        </div><br />
        
    </div>
    <div class="row">
        <div class="col-12 text-center">
            <input type="submit" id="FormButton" name="FormButton"
                   class="btn btn-primary" value="Add" />
            <input type="submit" id="FormButton" name="FormButton" formnovalidate
                   class="btn" value="Clear" />
        </div>
    </div>
</form>